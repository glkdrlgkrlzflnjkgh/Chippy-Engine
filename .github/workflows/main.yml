name: Builder

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
     
      - name: Restore dependencies
        run: dotnet restore RTX.sln

      - name: Build application
        run: dotnet build RTX.sln --configuration Release --no-restore

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: RTX-build
          path: ./bin/Release/

  tag_and_release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures all tags are fetched

      - name: Get latest tag
        id: get_latest_tag
        run: echo "LATEST_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV || echo "LATEST_TAG=0.0.0" >> $GITHUB_ENV

      - name: Generate new tag
        id: generate_tag
        run: |
          NEW_VERSION=$(echo $LATEST_TAG | awk -F. '{print $1"."$2"."$3+1}')
          echo "NEW_TAG=v$NEW_VERSION" >> $GITHUB_ENV

      - name: Create and push new tag
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "ActionsBot@Chippy-Engine.com"
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          name: "Release ${{ env.NEW_TAG }}"
          body: "Automated release from GitHub Actions"
          draft: false
          prerelease: false
          files: ./bin/Release/*

